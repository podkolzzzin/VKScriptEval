<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAoACgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1
        n/goD/wWh+Pn7P8A+2/488DeGNd8P2nh3w/qE0FnFLocM0qoqW5UF2yTjzG59/avtn/gkN+1R8Q/20P2
        X5vFvjTW4ptVj8QXenF7Kxgt4xDHFbuvy7DzmRufp6V+Pf8AwVp/5Se/Fb/sLXH/AKLtK/Tj/g361r+x
        /wDgnlqHzbfM8YX/AD9Le0r9m4qyfA0OGKGKo0YxqP2V5JK7vC7183ufkfDWcY2txJUw1WrKUEqmjeml
        RpaeS0PuHxL4km0TKx6pfNjuywf/ABuvz2+En/BbLx58R/2/7X4O3HhvRbfSpvGF14aOoxzH7SIobiWI
        S7Sm3eRGCR0yTX29p9rceNNbX73kbx/wI1+KX7PE8en/APBcmIll2w/FnVh19L+6FfKcF5VhMZQxssVD
        mdOk5R30aT10a/E+m4wzTFYOrgo4WfKqlVRls7p201v+B9n/APBPL/gt/r3xI/apvvhb8WLfT5E13WpN
        M8N6zplkYTb3AlaOO2uYwTuWXChZVAKOcMCjb4ivz5/Y6bd/wVL8AlTw3xJtz/5URRV+IWT4XL8ZS+qR
        5VOCbS2vdrTte33mfh/m2Kx+BqyxUuZwqSim97WTV++7+R6V+1l+yjrn7Y3/AAV/+MPhXw7faHpd9aXN
        5qs99q9xJDa2trDBbtKxMaSMST5YwEJ+gBr3f9nL9g/9q74JeAYvC3w5+PHwr0fw/eX0t2loto9wrXEk
        MEjPvudJdxvia3ZQWCsGUqDk51/2aNEh8S/8HCvxt025t47u31DSNYtpYHlaJZleKyUqXX5lBBIyORnI
        5r9NIPh2tteC5j8H+E47hZ3uVlW8dXWR1RXcH7PkFljRTjqqgdOK9XiTijF4SnhsDCMJU/Y0pWlBS15d
        9bnl8OcM4TE1K+OnKcantakbxm46cz00tpfU/P7wp+zx+3pqEiw6T+0t8KPMYLtjSwtFdgUDjCnRsn5T
        26YYdQQKEn/BNP8Abbk1z+1P+FrfAlNUM7XJvo/DGnR3RmYlmk81dED7ySSWzkkn1r9ENH+HreHtTt7v
        T/C/hmyltUKR+Tfuir8gQcC37INg9F46AY3vtviL/oF6N/4NJP8A5Hr5WPFmIj8NCiv+4UP8j6qXC9B6
        utV/8Gz/AMz8KfDn7EPjb9hj/gqp8DdD8d6n4d1jVfEfiTTNbS50aeSSFg+obGDCSKIq+9GOAu3DDB6g
        FfVH/BTpp3/4LQ/sstdRwxTl9K3pHIZFU/2tL0YqpP5Ciu7jHMKuOpYLFV7c0qbvZWWk5Lb0RxcIZfRw
        LxeFoX5Y1dLu71pwe/qzLufgp8dP2cf+CvvxK+L2k/AjxH8RPCWuG7sYfsmqWNst3BcQ25EqGSQ5w0QU
        qyrwW7jB+hB+2H8WFH/Jj/jL/wAHmjf/ABVFFedis8WLVN4nDwk4RjBP94tIqyvaaV/kevg8jWGU1QrT
        ipSlJr3HrJ3drwbt8w/4bE+LH/Rj/jL/AMHmjf8AxVH/AA2J8WP+jH/GP/g80b/4qiiuX67hv+gWH31f
        /lh2fUav/P8An91P/wCQPn74o/DL45/taf8ABSX4G/EC4/Z58TfDnwr4FvtOt7s3Oq2FysUUd81xLMRF
        INqgOflUMTgnuBRRRWWaZpLFxpQcIwjTjypR5trt680pO92+pOX5bDCOpKMnJ1JczbtvZR6JK1kuh//Z
</value>
  </data>
</root>